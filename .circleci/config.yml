version: 2.1

parameters:
  run_webhook_e2e:
    type: boolean
    default: true

orbs:
  node: circleci/node@5.2.0
  slack: circleci/slack@4.12.5

executors:
  playwright-executor:
    docker:
      - image: mcr.microsoft.com/playwright:v1.54.2-noble
    resource_class: medium
    environment:
      NODE_VERSION: "22.11"
      PNPM_VERSION: "9.14.4"

jobs:
  install_deps:
    docker:
      - image: cimg/node:22.11
    steps:
      - checkout
      - run:
          name: Install pnpm
          command: npm i --prefix=$HOME/.local -g pnpm@9.14.4
      - restore_cache:
          keys:
            - deps-v7-{{ checksum "pnpm-lock.yaml" }}
            - deps-v7-{{ .Branch }}
      - run:
          name: Install dependencies
          command: pnpm install
      - save_cache:
          key: deps-v7-{{ checksum "pnpm-lock.yaml" }}
          paths:
            - ./node_modules
            - ./packages/eslint-config/node_modules
            - ./packages/eslint-rules/node_modules
            - ./packages/prettier-config/node_modules
            - ./packages/shared/node_modules
            - ./packages/webapp/node_modules
            - ./packages/extension/node_modules

  e2e-tests:
    context: SLACK
    executor: playwright-executor
    steps:
      - checkout

      - run:
          name: Run Playwright tests
          command: pnpm test:e2e
          environment:
            USER_NAME: "${USER_NAME}"
            PASSWORD: "${PASSWORD}"

      - store_artifacts:
          name: Upload Playwright Report
          path: packages/playwright/playwright-report/
          destination: playwright-report

      - slack/notify:
          event: fail
          custom: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":x: *E2E Tests* failed in <${CIRCLE_BUILD_URL}|${CIRCLE_PROJECT_REPONAME}>"
                  }
                },
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "mrkdwn",
                      "text": "Linked to Repo <${CIRCLE_REPOSITORY_URL}|${CIRCLE_PROJECT_REPONAME}>"
                    }
                  ]
                }
              ]
            }

  webhook-e2e-tests:
    executor: playwright-executor
    steps:
      - checkout

      - run:
          name: Setup Node.js
          command: |
            curl -fsSL https://deb.nodesource.com/setup_22.x | sudo -E bash -
            sudo apt-get install -y nodejs
            node --version

      - run:
          name: Install pnpm
          command: |
            npm install -g pnpm@9.14.4
            pnpm --version

      - run:
          name: Get pnpm store directory
          command: |
            echo 'export PNPM_STORE_PATH=$(pnpm store path --silent)' >> "$BASH_ENV"
            source "$BASH_ENV"
            echo "PNPM store path: $PNPM_STORE_PATH"

      - restore_cache:
          name: Restore pnpm cache
          keys:
            - pnpm-store-{{ arch }}-{{ checksum "pnpm-lock.yaml" }}
            - pnpm-store-{{ arch }}-

      - run:
          name: Install dependencies
          command: pnpm install --frozen-lockfile

      - save_cache:
          name: Save pnpm cache
          key: pnpm-store-{{ arch }}-{{ checksum "pnpm-lock.yaml" }}
          paths:
            - ~/.local/share/pnpm/store

      - run:
          name: Run Playwright tests
          command: pnpm test:e2e
          environment:
            USER_NAME: "${USER_NAME}"
            PASSWORD: "${PASSWORD}"

      - store_artifacts:
          name: Upload Playwright Report
          path: packages/playwright/playwright-report/
          destination: playwright-report

      - slack/notify:
          event: fail
          custom: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":x: *Webhook E2E Tests* failed in <${CIRCLE_BUILD_URL}|${CIRCLE_PROJECT_REPONAME}>"
                  }
                },
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "mrkdwn",
                      "text": "Linked to Repo <${CIRCLE_REPOSITORY_URL}|${CIRCLE_PROJECT_REPONAME}>"
                    }
                  ]
                }
              ]
            }

  test_extension:
    docker:
      - image: cimg/node:22.11
    parallelism: 1
    steps:
      - checkout
      - restore_cache:
          keys:
            - deps-v7-{{ checksum "pnpm-lock.yaml" }}
            - deps-v7-{{ .Branch }}
      - run:
          name: Test
          command: |
            npm run pretest
            TEST=$(./node_modules/.bin/jest --listTests)
            echo $TEST | circleci tests run --command="xargs ./node_modules/.bin/jest --ci --runInBand --reporters=default --reporters=jest-junit --" --split-by=timings
          environment:
            JEST_JUNIT_OUTPUT_DIR: ../../test-results
          working_directory: packages/extension
      - store_test_results:
          path: ./test-results
  test_webapp:
    docker:
      - image: cimg/node:22.11
    parallelism: 1
    steps:
      - checkout
      - restore_cache:
          keys:
            - deps-v7-{{ checksum "pnpm-lock.yaml" }}
            - deps-v7-{{ .Branch }}
      - run:
          name: Test
          command: |
            npm run pretest
            TEST=$(./node_modules/.bin/jest --listTests)
            echo $TEST | circleci tests run --command="xargs ./node_modules/.bin/jest --ci --runInBand --reporters=default --reporters=jest-junit --" --split-by=timings
          environment:
            JEST_JUNIT_OUTPUT_DIR: ../../test-results
          working_directory: packages/webapp
      - store_test_results:
          path: ./test-results
  lint_shared:
    docker:
      - image: cimg/node:22.11
    resource_class: large
    steps:
      - checkout
      - restore_cache:
          keys:
            - deps-v7-{{ checksum "pnpm-lock.yaml" }}
            - deps-v7-{{ .Branch }}
      - run:
          name: Lint
          command: npm run pretest
          working_directory: packages/shared
  test_shared:
    docker:
      - image: cimg/node:22.11
    parallelism: 1
    steps:
      - checkout
      - restore_cache:
          keys:
            - deps-v7-{{ checksum "pnpm-lock.yaml" }}
            - deps-v7-{{ .Branch }}
      - run:
          name: Test
          command: |
            TEST=$(./node_modules/.bin/jest --listTests)
            echo $TEST | circleci tests run --command="xargs ./node_modules/.bin/jest --ci --runInBand --reporters=default --reporters=jest-junit --" --split-by=timings
          environment:
            JEST_JUNIT_OUTPUT_DIR: ../../test-results
          working_directory: packages/shared
      - store_test_results:
          path: ./test-results
workflows:
  build:
    jobs:
      - install_deps
      - test_extension:
          requires:
            - install_deps
      - test_webapp:
          requires:
            - install_deps
      - lint_shared:
          requires:
            - install_deps
      - test_shared:
          requires:
            - install_deps
  webhook-e2e:
    when: << pipeline.parameters.run_webhook_e2e >>
    jobs:
      - install_deps
      - webhook-e2e-tests
